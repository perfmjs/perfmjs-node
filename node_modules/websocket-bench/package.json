{
  "name": "websocket-bench",
  "version": "0.0.6",
  "description": "tool for benchmark websocket (socket.io, faye)",
  "main": "index.js",
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/M6Web/websocket-bench.git"
  },
  "bin": {
    "websocket-bench": "./bin/websocket-bench"
  },
  "author": "",
  "license": "BSD",
  "dependencies": {
    "socket.io-client": "~0.9.11",
    "commander": "~1.1.1",
    "colors": "~0.6",
    "cli-table": "~0.3.0",
    "faye": "~0.8.9",
    "winston": "~0.7.1",
    "socket.io": "~0.9.14",
    "chai": "~1.6.1",
    "primus": "~1.5.2"
  },
  "devDependencies": {
    "chai": "~1.6.0",
    "mocha": "*",
    "sinon": "*"
  },
  "readme": "# websocket bench\n\nNodejs cli tool for benchmarking websocket servers. Currently supports:\n* [Socket.IO](https://github.com/LearnBoost/socket.io)\n* [Faye](https://github.com/faye/faye)\n* [Primus](https://github.com/primus/primus)\n\n[![Build Status](https://travis-ci.org/M6Web/websocket-bench.png?branch=master)](https://travis-ci.org/M6Web/websocket-bench)\n\n\n## Installation\n\n    npm install -g websocket-bench\n\n## Usage\n\nTip: You may find it useful to increase the maximum number of open file descriptors on your system during testing:\n\n`ulimit -n 60000`\n\nSimple example (using Socket.IO by default):\n\n`websocket-bench -a 2500 -c 200 http://localhost:3000`\n\nSimple example (using Primus):\n\n`websocket-bench -t primus ws://localhost:8080`\n\ncommand help\n\n    Usage: websocket-bench [options] <server>\n\n    Options:\n\n      -h, --help               Output usage information\n      -V, --version            Output the version number\n      -a, --amount <n>         Total number of persistent connection, Default to 100\n      -c, --concurency <n>     Concurent connection per second, Default to 20\n      -w, --worker <n>         Number of worker(s)\n      -g, --generator <file>   Js file for generate message or special event\n      -m, --message <n>        Number of message for a client. Default to 0\n      -o, --output <output>    Output file\n      -t, --type <type>        Type of websocket server to bench(socket.io, faye, primus). Default to socket.io\n      -p, --transport <type>   Type of transport to websocket(engine.io, websockets, browserchannel, sockjs, socket.io). Default to websockets (Just for Primus)\n      -k, --keep-alive         Keep alive connection\n      -v, --verbose            Verbose Logging\n\n\n## Benchmark message\n\nFor benchmark message or more advanced connection you should provide your own `generator`\n\ngenerator structure :\n\n    (function() {\n\n       /**\n        * Before connection (optional, just for faye)\n        * @param {client} client connection\n        */\n       exports.beforeConnect = function(client) {\n         // Example:\n         // client.setHeader('Authorization', 'OAuth abcd-1234');\n         // client.disable('websocket');\n       };\n\n       /**\n        * On client connection (required)\n        * @param {client} client connection\n        * @param {done} callback function(err) {}\n        */\n       exports.onConnect = function(client, done) {\n         // Faye client\n         // client.subscribe('/channel', function(message) { });\n\n         // Socket.io client\n         // client.emit('test', { hello: 'world' });\n\n         // Primus client\n         // client.write('Sailing the seas of cheese');\n\n         done();\n       };\n\n       /**\n        * Send a message (required)\n        * @param {client} client connection\n        * @param {done} callback function(err) {}\n        */\n       exports.sendMessage = function(client, done) {\n         // Example:\n         // client.emit('test', { hello: 'world' });\n         // client.publish('/test', { hello: 'world' });\n         done();\n       };\n\n    })();\n\n## See also\n\nFrench article about websocket-bench : [Benchmarking websockets avec Node.Js](http://tech.m6web.fr/benchmarking-websockets-avec-nodejs)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/M6Web/websocket-bench/issues"
  },
  "homepage": "https://github.com/M6Web/websocket-bench",
  "_id": "websocket-bench@0.0.6",
  "_shasum": "226f1b46282d58b97ab0c8498197ff17bc8633e5",
  "_from": "websocket-bench@0.0.6",
  "_resolved": "https://registry.npmjs.org/websocket-bench/-/websocket-bench-0.0.6.tgz"
}
